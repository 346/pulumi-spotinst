// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Elastigroup extends pulumi.CustomResource {
    /**
     * Get an existing Elastigroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElastigroupState, opts?: pulumi.CustomResourceOptions): Elastigroup {
        return new Elastigroup(name, <any>state, { ...opts, id: id });
    }

    public readonly desiredCapacity: pulumi.Output<number | undefined>;
    public readonly healthCheck: pulumi.Output<{ autoHealing?: boolean, gracePeriod?: number, healthCheckType: string } | undefined>;
    public readonly images: pulumi.Output<{ customs?: { imageName: string, resourceGroupName: string }[], marketplaces?: { offer: string, publisher: string, sku: string }[] }[] | undefined>;
    public readonly loadBalancers: pulumi.Output<{ autoWeight?: boolean, balancerId?: string, targetSetId?: string, type: string }[] | undefined>;
    public readonly login: pulumi.Output<{ password?: string, sshPublicKey?: string, userName: string } | undefined>;
    public readonly lowPrioritySizes: pulumi.Output<string[]>;
    public readonly maxSize: pulumi.Output<number>;
    public readonly minSize: pulumi.Output<number>;
    public readonly name: pulumi.Output<string>;
    public readonly network: pulumi.Output<{ assignPublicIp?: boolean, resourceGroupName: string, subnetName: string, virtualNetworkName: string }>;
    public readonly odSizes: pulumi.Output<string[]>;
    public readonly product: pulumi.Output<string>;
    public readonly region: pulumi.Output<string>;
    public readonly resourceGroupName: pulumi.Output<string>;
    public readonly scheduledTasks: pulumi.Output<{ adjustment?: string, adjustmentPercentage?: string, batchSizePercentage?: string, cronExpression: string, gracePeriod?: string, isEnabled?: boolean, scaleMaxCapacity?: string, scaleMinCapacity?: string, scaleTargetCapacity?: string, taskType: string }[] | undefined>;
    public readonly strategy: pulumi.Output<{ drainingTimeout?: number, lowPriorityPercentage?: number, odCount?: number }>;
    public readonly userData: pulumi.Output<string | undefined>;

    /**
     * Create a Elastigroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElastigroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElastigroupArgs | ElastigroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ElastigroupState = argsOrState as ElastigroupState | undefined;
            inputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            inputs["healthCheck"] = state ? state.healthCheck : undefined;
            inputs["images"] = state ? state.images : undefined;
            inputs["loadBalancers"] = state ? state.loadBalancers : undefined;
            inputs["login"] = state ? state.login : undefined;
            inputs["lowPrioritySizes"] = state ? state.lowPrioritySizes : undefined;
            inputs["maxSize"] = state ? state.maxSize : undefined;
            inputs["minSize"] = state ? state.minSize : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["network"] = state ? state.network : undefined;
            inputs["odSizes"] = state ? state.odSizes : undefined;
            inputs["product"] = state ? state.product : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["scheduledTasks"] = state ? state.scheduledTasks : undefined;
            inputs["strategy"] = state ? state.strategy : undefined;
            inputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as ElastigroupArgs | undefined;
            if (!args || args.lowPrioritySizes === undefined) {
                throw new Error("Missing required property 'lowPrioritySizes'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.network === undefined) {
                throw new Error("Missing required property 'network'");
            }
            if (!args || args.odSizes === undefined) {
                throw new Error("Missing required property 'odSizes'");
            }
            if (!args || args.product === undefined) {
                throw new Error("Missing required property 'product'");
            }
            if (!args || args.region === undefined) {
                throw new Error("Missing required property 'region'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.strategy === undefined) {
                throw new Error("Missing required property 'strategy'");
            }
            inputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            inputs["healthCheck"] = args ? args.healthCheck : undefined;
            inputs["images"] = args ? args.images : undefined;
            inputs["loadBalancers"] = args ? args.loadBalancers : undefined;
            inputs["login"] = args ? args.login : undefined;
            inputs["lowPrioritySizes"] = args ? args.lowPrioritySizes : undefined;
            inputs["maxSize"] = args ? args.maxSize : undefined;
            inputs["minSize"] = args ? args.minSize : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["network"] = args ? args.network : undefined;
            inputs["odSizes"] = args ? args.odSizes : undefined;
            inputs["product"] = args ? args.product : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["scheduledTasks"] = args ? args.scheduledTasks : undefined;
            inputs["strategy"] = args ? args.strategy : undefined;
            inputs["userData"] = args ? args.userData : undefined;
        }
        super("spotinst:azure/elastigroup:Elastigroup", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Elastigroup resources.
 */
export interface ElastigroupState {
    readonly desiredCapacity?: pulumi.Input<number>;
    readonly healthCheck?: pulumi.Input<{ autoHealing?: pulumi.Input<boolean>, gracePeriod?: pulumi.Input<number>, healthCheckType: pulumi.Input<string> }>;
    readonly images?: pulumi.Input<pulumi.Input<{ customs?: pulumi.Input<pulumi.Input<{ imageName: pulumi.Input<string>, resourceGroupName: pulumi.Input<string> }>[]>, marketplaces?: pulumi.Input<pulumi.Input<{ offer: pulumi.Input<string>, publisher: pulumi.Input<string>, sku: pulumi.Input<string> }>[]> }>[]>;
    readonly loadBalancers?: pulumi.Input<pulumi.Input<{ autoWeight?: pulumi.Input<boolean>, balancerId?: pulumi.Input<string>, targetSetId?: pulumi.Input<string>, type: pulumi.Input<string> }>[]>;
    readonly login?: pulumi.Input<{ password?: pulumi.Input<string>, sshPublicKey?: pulumi.Input<string>, userName: pulumi.Input<string> }>;
    readonly lowPrioritySizes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly maxSize?: pulumi.Input<number>;
    readonly minSize?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly network?: pulumi.Input<{ assignPublicIp?: pulumi.Input<boolean>, resourceGroupName: pulumi.Input<string>, subnetName: pulumi.Input<string>, virtualNetworkName: pulumi.Input<string> }>;
    readonly odSizes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly product?: pulumi.Input<string>;
    readonly region?: pulumi.Input<string>;
    readonly resourceGroupName?: pulumi.Input<string>;
    readonly scheduledTasks?: pulumi.Input<pulumi.Input<{ adjustment?: pulumi.Input<string>, adjustmentPercentage?: pulumi.Input<string>, batchSizePercentage?: pulumi.Input<string>, cronExpression: pulumi.Input<string>, gracePeriod?: pulumi.Input<string>, isEnabled?: pulumi.Input<boolean>, scaleMaxCapacity?: pulumi.Input<string>, scaleMinCapacity?: pulumi.Input<string>, scaleTargetCapacity?: pulumi.Input<string>, taskType: pulumi.Input<string> }>[]>;
    readonly strategy?: pulumi.Input<{ drainingTimeout?: pulumi.Input<number>, lowPriorityPercentage?: pulumi.Input<number>, odCount?: pulumi.Input<number> }>;
    readonly userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Elastigroup resource.
 */
export interface ElastigroupArgs {
    readonly desiredCapacity?: pulumi.Input<number>;
    readonly healthCheck?: pulumi.Input<{ autoHealing?: pulumi.Input<boolean>, gracePeriod?: pulumi.Input<number>, healthCheckType: pulumi.Input<string> }>;
    readonly images?: pulumi.Input<pulumi.Input<{ customs?: pulumi.Input<pulumi.Input<{ imageName: pulumi.Input<string>, resourceGroupName: pulumi.Input<string> }>[]>, marketplaces?: pulumi.Input<pulumi.Input<{ offer: pulumi.Input<string>, publisher: pulumi.Input<string>, sku: pulumi.Input<string> }>[]> }>[]>;
    readonly loadBalancers?: pulumi.Input<pulumi.Input<{ autoWeight?: pulumi.Input<boolean>, balancerId?: pulumi.Input<string>, targetSetId?: pulumi.Input<string>, type: pulumi.Input<string> }>[]>;
    readonly login?: pulumi.Input<{ password?: pulumi.Input<string>, sshPublicKey?: pulumi.Input<string>, userName: pulumi.Input<string> }>;
    readonly lowPrioritySizes: pulumi.Input<pulumi.Input<string>[]>;
    readonly maxSize?: pulumi.Input<number>;
    readonly minSize?: pulumi.Input<number>;
    readonly name: pulumi.Input<string>;
    readonly network: pulumi.Input<{ assignPublicIp?: pulumi.Input<boolean>, resourceGroupName: pulumi.Input<string>, subnetName: pulumi.Input<string>, virtualNetworkName: pulumi.Input<string> }>;
    readonly odSizes: pulumi.Input<pulumi.Input<string>[]>;
    readonly product: pulumi.Input<string>;
    readonly region: pulumi.Input<string>;
    readonly resourceGroupName: pulumi.Input<string>;
    readonly scheduledTasks?: pulumi.Input<pulumi.Input<{ adjustment?: pulumi.Input<string>, adjustmentPercentage?: pulumi.Input<string>, batchSizePercentage?: pulumi.Input<string>, cronExpression: pulumi.Input<string>, gracePeriod?: pulumi.Input<string>, isEnabled?: pulumi.Input<boolean>, scaleMaxCapacity?: pulumi.Input<string>, scaleMinCapacity?: pulumi.Input<string>, scaleTargetCapacity?: pulumi.Input<string>, taskType: pulumi.Input<string> }>[]>;
    readonly strategy: pulumi.Input<{ drainingTimeout?: pulumi.Input<number>, lowPriorityPercentage?: pulumi.Input<number>, odCount?: pulumi.Input<number> }>;
    readonly userData?: pulumi.Input<string>;
}
