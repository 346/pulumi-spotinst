// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Elastigroup extends pulumi.CustomResource {
    /**
     * Get an existing Elastigroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElastigroupState, opts?: pulumi.CustomResourceOptions): Elastigroup {
        return new Elastigroup(name, <any>state, { ...opts, id: id });
    }

    public readonly clusterId: pulumi.Output<string>;
    public readonly clusterZoneName: pulumi.Output<string>;
    public readonly desiredCapacity: pulumi.Output<number>;
    public readonly instanceTypesOndemand: pulumi.Output<string | undefined>;
    public readonly instanceTypesPreemptibles: pulumi.Output<string[] | undefined>;
    public readonly maxSize: pulumi.Output<number>;
    public readonly minSize: pulumi.Output<number>;
    public readonly name: pulumi.Output<string>;
    public readonly nodeImage: pulumi.Output<string | undefined>;
    public readonly preemptiblePercentage: pulumi.Output<number | undefined>;

    /**
     * Create a Elastigroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElastigroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElastigroupArgs | ElastigroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ElastigroupState = argsOrState as ElastigroupState | undefined;
            inputs["clusterId"] = state ? state.clusterId : undefined;
            inputs["clusterZoneName"] = state ? state.clusterZoneName : undefined;
            inputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            inputs["instanceTypesOndemand"] = state ? state.instanceTypesOndemand : undefined;
            inputs["instanceTypesPreemptibles"] = state ? state.instanceTypesPreemptibles : undefined;
            inputs["maxSize"] = state ? state.maxSize : undefined;
            inputs["minSize"] = state ? state.minSize : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nodeImage"] = state ? state.nodeImage : undefined;
            inputs["preemptiblePercentage"] = state ? state.preemptiblePercentage : undefined;
        } else {
            const args = argsOrState as ElastigroupArgs | undefined;
            if (!args || args.clusterId === undefined) {
                throw new Error("Missing required property 'clusterId'");
            }
            if (!args || args.clusterZoneName === undefined) {
                throw new Error("Missing required property 'clusterZoneName'");
            }
            if (!args || args.desiredCapacity === undefined) {
                throw new Error("Missing required property 'desiredCapacity'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            inputs["clusterId"] = args ? args.clusterId : undefined;
            inputs["clusterZoneName"] = args ? args.clusterZoneName : undefined;
            inputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            inputs["instanceTypesOndemand"] = args ? args.instanceTypesOndemand : undefined;
            inputs["instanceTypesPreemptibles"] = args ? args.instanceTypesPreemptibles : undefined;
            inputs["maxSize"] = args ? args.maxSize : undefined;
            inputs["minSize"] = args ? args.minSize : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nodeImage"] = args ? args.nodeImage : undefined;
            inputs["preemptiblePercentage"] = args ? args.preemptiblePercentage : undefined;
        }
        super("spotinst:gke/elastigroup:Elastigroup", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Elastigroup resources.
 */
export interface ElastigroupState {
    readonly clusterId?: pulumi.Input<string>;
    readonly clusterZoneName?: pulumi.Input<string>;
    readonly desiredCapacity?: pulumi.Input<number>;
    readonly instanceTypesOndemand?: pulumi.Input<string>;
    readonly instanceTypesPreemptibles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly maxSize?: pulumi.Input<number>;
    readonly minSize?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly nodeImage?: pulumi.Input<string>;
    readonly preemptiblePercentage?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Elastigroup resource.
 */
export interface ElastigroupArgs {
    readonly clusterId: pulumi.Input<string>;
    readonly clusterZoneName: pulumi.Input<string>;
    readonly desiredCapacity: pulumi.Input<number>;
    readonly instanceTypesOndemand?: pulumi.Input<string>;
    readonly instanceTypesPreemptibles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly maxSize?: pulumi.Input<number>;
    readonly minSize?: pulumi.Input<number>;
    readonly name: pulumi.Input<string>;
    readonly nodeImage?: pulumi.Input<string>;
    readonly preemptiblePercentage?: pulumi.Input<number>;
}
