// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gke

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Spotinst elastigroup GKE resource.
type Elastigroup struct {
	s *pulumi.ResourceState
}

// NewElastigroup registers a new resource with the given unique name, arguments, and options.
func NewElastigroup(ctx *pulumi.Context,
	name string, args *ElastigroupArgs, opts ...pulumi.ResourceOpt) (*Elastigroup, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.ClusterZoneName == nil {
		return nil, errors.New("missing required argument 'ClusterZoneName'")
	}
	if args == nil || args.DesiredCapacity == nil {
		return nil, errors.New("missing required argument 'DesiredCapacity'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clusterId"] = nil
		inputs["clusterZoneName"] = nil
		inputs["desiredCapacity"] = nil
		inputs["instanceTypesOndemand"] = nil
		inputs["instanceTypesPreemptibles"] = nil
		inputs["maxSize"] = nil
		inputs["minSize"] = nil
		inputs["name"] = nil
		inputs["nodeImage"] = nil
		inputs["preemptiblePercentage"] = nil
	} else {
		inputs["clusterId"] = args.ClusterId
		inputs["clusterZoneName"] = args.ClusterZoneName
		inputs["desiredCapacity"] = args.DesiredCapacity
		inputs["instanceTypesOndemand"] = args.InstanceTypesOndemand
		inputs["instanceTypesPreemptibles"] = args.InstanceTypesPreemptibles
		inputs["maxSize"] = args.MaxSize
		inputs["minSize"] = args.MinSize
		inputs["name"] = args.Name
		inputs["nodeImage"] = args.NodeImage
		inputs["preemptiblePercentage"] = args.PreemptiblePercentage
	}
	s, err := ctx.RegisterResource("spotinst:gke/elastigroup:Elastigroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Elastigroup{s: s}, nil
}

// GetElastigroup gets an existing Elastigroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElastigroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ElastigroupState, opts ...pulumi.ResourceOpt) (*Elastigroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["clusterId"] = state.ClusterId
		inputs["clusterZoneName"] = state.ClusterZoneName
		inputs["desiredCapacity"] = state.DesiredCapacity
		inputs["instanceTypesOndemand"] = state.InstanceTypesOndemand
		inputs["instanceTypesPreemptibles"] = state.InstanceTypesPreemptibles
		inputs["maxSize"] = state.MaxSize
		inputs["minSize"] = state.MinSize
		inputs["name"] = state.Name
		inputs["nodeImage"] = state.NodeImage
		inputs["preemptiblePercentage"] = state.PreemptiblePercentage
	}
	s, err := ctx.ReadResource("spotinst:gke/elastigroup:Elastigroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Elastigroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Elastigroup) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Elastigroup) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the GKE cluster you wish to import.
func (r *Elastigroup) ClusterId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["clusterId"])
}

// The zone where the cluster is hosted.
func (r *Elastigroup) ClusterZoneName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["clusterZoneName"])
}

// The desired number of instances the group should have at any time.
func (r *Elastigroup) DesiredCapacity() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["desiredCapacity"])
}

func (r *Elastigroup) InstanceTypesOndemand() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instanceTypesOndemand"])
}

// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_on_demand is not set.
func (r *Elastigroup) InstanceTypesPreemptibles() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["instanceTypesPreemptibles"])
}

// The maximum number of instances the group should have at any time.
func (r *Elastigroup) MaxSize() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["maxSize"])
}

// The minimum number of instances the group should have at any time.
func (r *Elastigroup) MinSize() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["minSize"])
}

// The group name.
func (r *Elastigroup) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
func (r *Elastigroup) NodeImage() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nodeImage"])
}

// The percentage of preemptible VMs that would spin up from the desired capacity (range: 0-100).
func (r *Elastigroup) PreemptiblePercentage() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["preemptiblePercentage"])
}

// Input properties used for looking up and filtering Elastigroup resources.
type ElastigroupState struct {
	// The name of the GKE cluster you wish to import.
	ClusterId interface{}
	// The zone where the cluster is hosted.
	ClusterZoneName interface{}
	// The desired number of instances the group should have at any time.
	DesiredCapacity interface{}
	InstanceTypesOndemand interface{}
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_on_demand is not set.
	InstanceTypesPreemptibles interface{}
	// The maximum number of instances the group should have at any time.
	MaxSize interface{}
	// The minimum number of instances the group should have at any time.
	MinSize interface{}
	// The group name.
	Name interface{}
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage interface{}
	// The percentage of preemptible VMs that would spin up from the desired capacity (range: 0-100).
	PreemptiblePercentage interface{}
}

// The set of arguments for constructing a Elastigroup resource.
type ElastigroupArgs struct {
	// The name of the GKE cluster you wish to import.
	ClusterId interface{}
	// The zone where the cluster is hosted.
	ClusterZoneName interface{}
	// The desired number of instances the group should have at any time.
	DesiredCapacity interface{}
	InstanceTypesOndemand interface{}
	// The preemptible VMs instance type. To maximize cost savings and market availability, select as many types as possible. Required if instance_types_on_demand is not set.
	InstanceTypesPreemptibles interface{}
	// The maximum number of instances the group should have at any time.
	MaxSize interface{}
	// The minimum number of instances the group should have at any time.
	MinSize interface{}
	// The group name.
	Name interface{}
	// The image that will be used for the node VMs. Possible values: COS, UBUNTU.
	NodeImage interface{}
	// The percentage of preemptible VMs that would spin up from the desired capacity (range: 0-100).
	PreemptiblePercentage interface{}
}
